// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SapphireApi.Data;

namespace SapphireApi.Migrations
{
    [DbContext(typeof(Sapphire_Context))]
    [Migration("20210521221516_SeedObjectTable")]
    partial class SeedObjectTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(127)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("RoleId")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("Name")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Cities.CityModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OCST");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Country.CountryModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("key")
                        .IsUnique();

                    b.HasIndex("name")
                        .IsUnique();

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OCRY");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int?>("defaultSerieId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("docPrefix")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("defaultSerieId")
                        .IsUnique();

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OOBJ");

                    b.HasData(
                        new
                        {
                            id = 101,
                            code = "OOBJ",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Objects",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 1,
                            code = "OADM",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Companies",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 102,
                            code = "ONNM",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Series",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 110,
                            code = "OCRY",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Countries",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 111,
                            code = "OCST",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Cities",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 120,
                            code = "OUOM",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Units Of Measure",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 121,
                            code = "OUGP",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "UOM Converters",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 130,
                            code = "OCRN",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Currencies",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 131,
                            code = "ORTT",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Currencies Rates",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 201,
                            code = "OWHS",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Warehouses",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 202,
                            code = "OMRC",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Manufacter",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 203,
                            code = "OKOM",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Kind Of Movements",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 210,
                            code = "OITB",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Item's Groups",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 211,
                            code = "OITM",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Items",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 212,
                            code = "OBTN",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Item's Batches",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 220,
                            code = "OITL",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Batches Transactions",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 221,
                            code = "OIGN",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Items Receipts",
                            docPrefix = "IR",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 222,
                            code = "OIGE",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Items Dispatches",
                            docPrefix = "ID",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 223,
                            code = "OWTQ",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Items Warehouse Transfer Request",
                            docPrefix = "TQ",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 224,
                            code = "OWTR",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Items Warehouse Transference",
                            docPrefix = "TR",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 300,
                            code = "OPLN",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Price Lists",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 310,
                            code = "OCRG",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Bussiness Partners Groups",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        },
                        new
                        {
                            id = 311,
                            code = "OCRD",
                            createdAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            createdBy = "40709ea0-0908-4bea-8468-433bd706cedd",
                            description = "Bussiness Partners Cards",
                            objType = 101,
                            updatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            updatedBy = "40709ea0-0908-4bea-8468-433bd706cedd"
                        });
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Series.SerieModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("firstNumber")
                        .HasColumnType("int");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int?>("lastNumber")
                        .HasColumnType("int");

                    b.Property<int>("nextNumber")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("seriesName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_ONNM");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.UOM.Converter.UOMConverterModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("fromOneId")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("rate")
                        .HasColumnType("float");

                    b.Property<int>("toManyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("fromOneId");

                    b.HasIndex("objType");

                    b.HasIndex("toManyId");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OUGP");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.UOM.UOMModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<int>("uomType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OUOM");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("city")
                        .HasColumnType("text");

                    b.Property<string>("companyAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("companyName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("mainCur")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("phone1")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("phone2")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("sysCur")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("webPage")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("zipCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.HasKey("id");

                    b.HasIndex("countryId");

                    b.HasIndex("createdBy");

                    b.HasIndex("mainCur")
                        .IsUnique();

                    b.HasIndex("objType");

                    b.HasIndex("sysCur")
                        .IsUnique();

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OADM");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", b =>
                {
                    b.Property<string>("currCode")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("currName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("currCode");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_OCRN");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Currencies.Rates.CurrencyRateModel", b =>
                {
                    b.Property<DateTime>("rateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("curCode")
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("rate")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("rateDate", "curCode");

                    b.HasIndex("createdBy");

                    b.HasIndex("curCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("ADM_ORTT");
                });

            modelBuilder.Entity("SapphireApi.Data.Identity.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int?>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)")
                        .HasColumnName("FullName");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("companyId");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Batches.BatchModel", b =>
                {
                    b.Property<string>("itemCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("batchNum")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("expDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("inDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("mnfDate")
                        .HasColumnType("datetime");

                    b.Property<string>("mnfSerial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("itemCode", "batchNum");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OBTN");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Items.ItemModel", b =>
                {
                    b.Property<string>("itemCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("barCode")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<bool>("inventoryItem")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("inventoryUomId")
                        .HasColumnType("int");

                    b.Property<string>("itemName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("itemsGroupId")
                        .HasColumnType("int");

                    b.Property<float?>("maxInvLvl")
                        .HasColumnType("float");

                    b.Property<float?>("minInvLvl")
                        .HasColumnType("float");

                    b.Property<int?>("mrcCode")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<bool>("purchaseItem")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("purchaseUomId")
                        .HasColumnType("int");

                    b.Property<bool>("sellItem")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("sellUomId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("itemCode");

                    b.HasIndex("createdBy");

                    b.HasIndex("inventoryUomId");

                    b.HasIndex("itemsGroupId");

                    b.HasIndex("mrcCode");

                    b.HasIndex("objType");

                    b.HasIndex("purchaseUomId");

                    b.HasIndex("sellUomId");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OITM");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.ItemsGroup.ItemsGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("itmsGrpNam")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OITB");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Manufacters.ManufacterModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("firmName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OMRC");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionDetailsModel", b =>
                {
                    b.Property<int>("masterObjTypeId")
                        .HasColumnType("int");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<string>("itemCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("batchId")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterObjTypeId", "masterId", "itemCode", "batchId");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.HasIndex("itemCode", "batchId");

                    b.ToTable("INV_ITL1");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionModel", b =>
                {
                    b.Property<int>("masterObjTypeId")
                        .HasColumnType("int");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("masterRef")
                        .HasColumnType("int");

                    b.Property<int>("masterSerieId")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterObjTypeId", "masterId");

                    b.HasIndex("createdBy");

                    b.HasIndex("masterSerieId");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OITL");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchBatchDetailsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("batchNum")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<int>("masterLine")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.HasIndex("itemCode", "batchNum");

                    b.HasIndex("masterId", "masterLine");

                    b.ToTable("INV_IGE2");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchDetailsModel", b =>
                {
                    b.Property<int>("masterId")
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("lineNum");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterId", "id");

                    b.HasIndex("createdBy");

                    b.HasIndex("itemCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_IGE1");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<string>("comment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<int>("docNum")
                        .HasColumnType("int");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isCanceled");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<bool>("isPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isPrinted");

                    b.Property<int>("komId")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("reference")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("serieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("whsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("komId");

                    b.HasIndex("objType");

                    b.HasIndex("serieId");

                    b.HasIndex("updatedBy");

                    b.HasIndex("whsCode");

                    b.ToTable("INV_OIGE");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.KindOfMovements.KoMModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OKOM");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptBatchDetailsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("batchNum")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<int>("masterLine")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.HasIndex("itemCode", "batchNum");

                    b.HasIndex("masterId", "masterLine");

                    b.ToTable("INV_IGN2");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptDetailsModel", b =>
                {
                    b.Property<int>("masterId")
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("lineNum");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterId", "id");

                    b.HasIndex("createdBy");

                    b.HasIndex("itemCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_IGN1");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<string>("comment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<int>("docNum")
                        .HasColumnType("int");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isCanceled");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<bool>("isPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isPrinted");

                    b.Property<int>("komId")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("reference")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("serieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("whsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("komId");

                    b.HasIndex("objType");

                    b.HasIndex("serieId");

                    b.HasIndex("updatedBy");

                    b.HasIndex("whsCode");

                    b.ToTable("INV_OIGN");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceBatchDetailsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("batchNum")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<int>("masterLine")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.HasIndex("itemCode", "batchNum");

                    b.HasIndex("masterId", "masterLine");

                    b.ToTable("INV_WTR2");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceDetailsModel", b =>
                {
                    b.Property<int>("masterId")
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("lineNum");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterId", "id");

                    b.HasIndex("createdBy");

                    b.HasIndex("itemCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_WTR1");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<string>("comment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<int>("docNum")
                        .HasColumnType("int");

                    b.Property<string>("fromWhsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isCanceled");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<bool>("isPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isPrinted");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("reference")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("serieId")
                        .HasColumnType("int");

                    b.Property<string>("toWhsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("fromWhsCode");

                    b.HasIndex("objType");

                    b.HasIndex("serieId");

                    b.HasIndex("toWhsCode");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OWTR");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestBatchDetailsModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("batchNum")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("masterId")
                        .HasColumnType("int");

                    b.Property<int>("masterLine")
                        .HasColumnType("int");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.HasIndex("itemCode", "batchNum");

                    b.HasIndex("masterId", "masterLine");

                    b.ToTable("INV_WTQ2");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestDetailsModel", b =>
                {
                    b.Property<int>("masterId")
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<int>("id")
                        .HasColumnType("int")
                        .HasColumnName("lineNum");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("openQty")
                        .HasColumnType("float");

                    b.Property<float>("quantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("masterId", "id");

                    b.HasIndex("createdBy");

                    b.HasIndex("itemCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_WTQ1");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("docId");

                    b.Property<string>("comment")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<DateTime>("docDate")
                        .HasColumnType("datetime");

                    b.Property<int>("docNum")
                        .HasColumnType("int");

                    b.Property<string>("fromWhsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<bool>("isCanceled")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isCanceled");

                    b.Property<bool>("isClosed")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isClosed");

                    b.Property<bool>("isPrinted")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false)
                        .HasColumnName("isPrinted");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<string>("reference")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("serieId")
                        .HasColumnType("int");

                    b.Property<string>("toWhsCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("fromWhsCode");

                    b.HasIndex("objType");

                    b.HasIndex("serieId");

                    b.HasIndex("toWhsCode");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OWTQ");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", b =>
                {
                    b.Property<string>("whsCode")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("cityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("whsName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.HasKey("whsCode");

                    b.HasIndex("cityId");

                    b.HasIndex("createdBy");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("INV_OWHS");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerCards.BusinessPartnerCardModel", b =>
                {
                    b.Property<string>("cardCode")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("cardGroupId")
                        .HasColumnType("int");

                    b.Property<string>("cardName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("cardType")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("currCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("identifier")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("website")
                        .HasColumnType("text");

                    b.HasKey("cardCode");

                    b.HasIndex("cardGroupId");

                    b.HasIndex("createdBy");

                    b.HasIndex("currCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("MKT_OCRD");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerGroup.BusinessPartnerCardGroupModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<int>("defaultPriceListId")
                        .HasColumnType("int");

                    b.Property<string>("groupName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<bool>("isLocked")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(false);

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<int>("onlyCardType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("defaultPriceListId");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("MKT_OCRG");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListDetailModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("itemCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<float>("price")
                        .HasColumnType("float");

                    b.Property<int>("priceListId")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("itemCode");

                    b.HasIndex("objType");

                    b.HasIndex("priceListId");

                    b.HasIndex("updatedBy");

                    b.ToTable("MKT_ITM1");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("listId");

                    b.Property<int?>("baseList")
                        .HasColumnType("int");

                    b.Property<DateTime>("createdAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.Property<string>("curCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)");

                    b.Property<float?>("factor")
                        .HasColumnType("float");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true);

                    b.Property<string>("listName")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("objType")
                        .HasColumnType("int");

                    b.Property<DateTime>("updatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("updatedBy")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("varchar(127)");

                    b.HasKey("id");

                    b.HasIndex("createdBy");

                    b.HasIndex("curCode");

                    b.HasIndex("objType");

                    b.HasIndex("updatedBy");

                    b.ToTable("MKT_OPLN");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Cities.CityModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Administration.Locations.Country.CountryModel", "country")
                        .WithMany("cities")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("country");

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Country.CountryModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "deafultSerie")
                        .WithOne("objects")
                        .HasForeignKey("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "defaultSerieId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("deafultSerie");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Series.SerieModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany("series")
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.UOM.Converter.UOMConverterModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.UOM.UOMModel", "fromOne")
                        .WithMany("uomConverter_from")
                        .HasForeignKey("fromOneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.UOM.UOMModel", "toMany")
                        .WithMany("uomConverter_to")
                        .HasForeignKey("toManyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("fromOne");

                    b.Navigation("obj");

                    b.Navigation("toMany");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.UOM.UOMModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Administration.Locations.Country.CountryModel", "country")
                        .WithMany("company")
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", "mainCurrency")
                        .WithOne("mainFor")
                        .HasForeignKey("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", "mainCur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", "systemCurrency")
                        .WithOne("sysFor")
                        .HasForeignKey("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", "sysCur")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("country");

                    b.Navigation("creatorUsr");

                    b.Navigation("mainCurrency");

                    b.Navigation("obj");

                    b.Navigation("systemCurrency");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Currencies.Rates.CurrencyRateModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", "currency")
                        .WithMany("currRates")
                        .HasForeignKey("curCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("currency");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Identity.UserModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", "company")
                        .WithMany("users")
                        .HasForeignKey("companyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("company");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Batches.BatchModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany("batches")
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Items.ItemModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.UOM.UOMModel", "inventoryUOM")
                        .WithMany("invItm")
                        .HasForeignKey("inventoryUomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.ItemsGroup.ItemsGroupModel", "itemsGroup")
                        .WithMany("items")
                        .HasForeignKey("itemsGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Manufacters.ManufacterModel", "manufacter")
                        .WithMany("items")
                        .HasForeignKey("mrcCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.UOM.UOMModel", "purchaseUOM")
                        .WithMany("purItm")
                        .HasForeignKey("purchaseUomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.UOM.UOMModel", "sellUOM")
                        .WithMany("sellItm")
                        .HasForeignKey("sellUomId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("inventoryUOM");

                    b.Navigation("itemsGroup");

                    b.Navigation("manufacter");

                    b.Navigation("obj");

                    b.Navigation("purchaseUOM");

                    b.Navigation("sellUOM");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.ItemsGroup.ItemsGroupModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Manufacters.ManufacterModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Batches.BatchModel", "batch")
                        .WithMany("batchTransactionDetails")
                        .HasForeignKey("itemCode", "batchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionModel", "batchTransaction")
                        .WithMany("details")
                        .HasForeignKey("masterObjTypeId", "masterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("batch");

                    b.Navigation("batchTransaction");

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "masterObjType")
                        .WithMany("batchTransactions")
                        .HasForeignKey("masterObjTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "masterSerie")
                        .WithMany("batchTransactions")
                        .HasForeignKey("masterSerieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("masterObjType");

                    b.Navigation("masterSerie");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchBatchDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Batches.BatchModel", "batch")
                        .WithMany()
                        .HasForeignKey("itemCode", "batchNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchDetailsModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId", "masterLine")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("batch");

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Dispatches.DispatchModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.KindOfMovements.KoMModel", "kom")
                        .WithMany()
                        .HasForeignKey("komId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "serie")
                        .WithMany()
                        .HasForeignKey("serieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "warehouse")
                        .WithMany()
                        .HasForeignKey("whsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("kom");

                    b.Navigation("obj");

                    b.Navigation("serie");

                    b.Navigation("updaterUsr");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.KindOfMovements.KoMModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptBatchDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Batches.BatchModel", "batch")
                        .WithMany()
                        .HasForeignKey("itemCode", "batchNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptDetailsModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId", "masterLine")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("batch");

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.IO.Receipts.ReceiptModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.IO.KindOfMovements.KoMModel", "kom")
                        .WithMany()
                        .HasForeignKey("komId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "serie")
                        .WithMany()
                        .HasForeignKey("serieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "warehouse")
                        .WithMany()
                        .HasForeignKey("whsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("kom");

                    b.Navigation("obj");

                    b.Navigation("serie");

                    b.Navigation("updaterUsr");

                    b.Navigation("warehouse");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceBatchDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Batches.BatchModel", "batch")
                        .WithMany()
                        .HasForeignKey("itemCode", "batchNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceDetailsModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId", "masterLine")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("batch");

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Documents.TransferenceModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "fromWhs")
                        .WithMany()
                        .HasForeignKey("fromWhsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "serie")
                        .WithMany()
                        .HasForeignKey("serieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "toWhs")
                        .WithMany()
                        .HasForeignKey("toWhsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("fromWhs");

                    b.Navigation("obj");

                    b.Navigation("serie");

                    b.Navigation("toWhs");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestBatchDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Batches.BatchModel", "batch")
                        .WithMany()
                        .HasForeignKey("itemCode", "batchNum")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestDetailsModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId", "masterLine")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("batch");

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestDetailsModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany()
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestModel", "master")
                        .WithMany()
                        .HasForeignKey("masterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("master");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Transferences.Request.TransferRequestModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "fromWhs")
                        .WithMany()
                        .HasForeignKey("fromWhsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Series.SerieModel", "serie")
                        .WithMany()
                        .HasForeignKey("serieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", "toWhs")
                        .WithMany()
                        .HasForeignKey("toWhsCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("fromWhs");

                    b.Navigation("obj");

                    b.Navigation("serie");

                    b.Navigation("toWhs");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Warehouses.WarehouseModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Administration.Locations.Cities.CityModel", "city")
                        .WithMany("warehouses")
                        .HasForeignKey("cityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("city");

                    b.Navigation("creatorUsr");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerCards.BusinessPartnerCardModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerGroup.BusinessPartnerCardGroupModel", "cardGroup")
                        .WithMany("cards")
                        .HasForeignKey("cardGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", "currency")
                        .WithMany("cards")
                        .HasForeignKey("currCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("cardGroup");

                    b.Navigation("creatorUsr");

                    b.Navigation("currency");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerGroup.BusinessPartnerCardGroupModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListModel", "defaultPriceList")
                        .WithMany("businessPartnerCardGroups")
                        .HasForeignKey("defaultPriceListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("defaultPriceList");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListDetailModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Inventory.Items.ItemModel", "item")
                        .WithMany("prices")
                        .HasForeignKey("itemCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListModel", "priceList")
                        .WithMany("details")
                        .HasForeignKey("priceListId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("item");

                    b.Navigation("obj");

                    b.Navigation("priceList");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListModel", b =>
                {
                    b.HasOne("SapphireApi.Data.Identity.UserModel", "creatorUsr")
                        .WithMany()
                        .HasForeignKey("createdBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", "currency")
                        .WithMany("priceLists")
                        .HasForeignKey("curCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", "obj")
                        .WithMany()
                        .HasForeignKey("objType")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SapphireApi.Data.Identity.UserModel", "updaterUsr")
                        .WithMany()
                        .HasForeignKey("updatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("creatorUsr");

                    b.Navigation("currency");

                    b.Navigation("obj");

                    b.Navigation("updaterUsr");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Cities.CityModel", b =>
                {
                    b.Navigation("warehouses");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Locations.Country.CountryModel", b =>
                {
                    b.Navigation("cities");

                    b.Navigation("company");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Objects.ObjectModel", b =>
                {
                    b.Navigation("batchTransactions");

                    b.Navigation("series");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.Series.SerieModel", b =>
                {
                    b.Navigation("batchTransactions");

                    b.Navigation("objects");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.Setup.UOM.UOMModel", b =>
                {
                    b.Navigation("invItm");

                    b.Navigation("purItm");

                    b.Navigation("sellItm");

                    b.Navigation("uomConverter_from");

                    b.Navigation("uomConverter_to");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Company.CompanyModel", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("SapphireApi.Data.Administration.SystemInitialization.Currencies.CurrencyModel", b =>
                {
                    b.Navigation("cards");

                    b.Navigation("currRates");

                    b.Navigation("mainFor");

                    b.Navigation("priceLists");

                    b.Navigation("sysFor");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Batches.BatchModel", b =>
                {
                    b.Navigation("batchTransactionDetails");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Items.ItemModel", b =>
                {
                    b.Navigation("batches");

                    b.Navigation("prices");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.ItemsGroup.ItemsGroupModel", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Manufacters.ManufacterModel", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("SapphireApi.Data.Inventory.Transactions.Batch.BatchTransactionModel", b =>
                {
                    b.Navigation("details");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.BusinessPartners.BusinessPartnerGroup.BusinessPartnerCardGroupModel", b =>
                {
                    b.Navigation("cards");
                });

            modelBuilder.Entity("SapphireApi.Data.Marketing.Pricing.PriceList.PriceListModel", b =>
                {
                    b.Navigation("businessPartnerCardGroups");

                    b.Navigation("details");
                });
#pragma warning restore 612, 618
        }
    }
}
